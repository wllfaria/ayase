#[derive(Debug, PartialEq, Eq, Clone, Copy)]
pub enum Operator {
    Add,
    Sub,
    Mul,
}

#[derive(Debug, PartialEq, Eq)]
pub enum Atom<'parser> {
    HexLiteral(&'parser str),
    Address(&'parser str),
    Register(&'parser str),
    Var(&'parser str),
    Operator(Operator),
    BinaryOp {
        lhs: Box<Atom<'parser>>,
        operator: Operator,
        rhs: Box<Atom<'parser>>,
    },
}

#[derive(Debug, PartialEq, Eq)]
pub enum Instruction<'parser> {
    MovLitReg(Atom<'parser>, Atom<'parser>),
    MovRegReg(Atom<'parser>, Atom<'parser>),
    MovRegMem(Atom<'parser>, Atom<'parser>),
    MovMemReg(Atom<'parser>, Atom<'parser>),
    MovLitMem(Atom<'parser>, Atom<'parser>),
    MovRegPtrReg(Atom<'parser>, Atom<'parser>),
    AddRegReg(Atom<'parser>, Atom<'parser>),
    AddLitReg(Atom<'parser>, Atom<'parser>),
    SubRegReg(Atom<'parser>, Atom<'parser>),
    SubLitReg(Atom<'parser>, Atom<'parser>),
    MulRegReg(Atom<'parser>, Atom<'parser>),
    MulLitReg(Atom<'parser>, Atom<'parser>),
    LshRegReg(Atom<'parser>, Atom<'parser>),
    LshLitReg(Atom<'parser>, Atom<'parser>),
    RshRegReg(Atom<'parser>, Atom<'parser>),
    RshLitReg(Atom<'parser>, Atom<'parser>),
    AndRegReg(Atom<'parser>, Atom<'parser>),
    AndLitReg(Atom<'parser>, Atom<'parser>),
    OrLitReg(Atom<'parser>, Atom<'parser>),
    OrRegReg(Atom<'parser>, Atom<'parser>),
    XorLitReg(Atom<'parser>, Atom<'parser>),
    XorRegReg(Atom<'parser>, Atom<'parser>),
    Inc(Atom<'parser>),
    Dec(Atom<'parser>),
    Not(Atom<'parser>),
    JeqLit(Atom<'parser>, Atom<'parser>),
    JeqReg(Atom<'parser>, Atom<'parser>),
    JgtLit(Atom<'parser>, Atom<'parser>),
    JgtReg(Atom<'parser>, Atom<'parser>),
    JneLit(Atom<'parser>, Atom<'parser>),
    JneReg(Atom<'parser>, Atom<'parser>),
    JgeLit(Atom<'parser>, Atom<'parser>),
    JgeReg(Atom<'parser>, Atom<'parser>),
    JleLit(Atom<'parser>, Atom<'parser>),
    JleReg(Atom<'parser>, Atom<'parser>),
    JltLit(Atom<'parser>, Atom<'parser>),
    JltReg(Atom<'parser>, Atom<'parser>),
    PshLit(Atom<'parser>),
    PshReg(Atom<'parser>),
    Pop(Atom<'parser>),
    CalLit(Atom<'parser>),
    CalReg(Atom<'parser>),
    Ret,
    Hlt,
}
